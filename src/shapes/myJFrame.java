/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shapes;
import geometry.Circle;
import geometry.Cone;
import geometry.Cube;
import geometry.Cuboid;
import geometry.Rectangle;
import geometry.Shape;
import geometry.Sphere;
import geometry.Square;
import geometry.Twodimensional_Shape;
import java.awt.BorderLayout;
import java.awt.FileDialog;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import geometry.Cylinder;

//==============================================================================
public class myJFrame extends javax.swing.JFrame {

    private ArrayList<Shape> shapeList = null;
    private Shape shape = null;
    private final DefaultListModel listModel;
    private final JLabel[] jLabels;
    private final JTextField[] jTextFields;
    private Graphics graph = null;
    private boolean error = false;
//==============================================================================
    //====================
    //Constructor myJFrame
    //====================

    public myJFrame() {
        initComponents();                         //Initializing the components
        shapeList = new ArrayList<>();
        graph = new Graphics(shapeList);

        listModel = new DefaultListModel();

        jPanelGraphics.setLayout(new BorderLayout());
        jPanelGraphics.add(graph.cnvs, BorderLayout.CENTER);

        jLabels = new JLabel[]{
            Radius, Length, Width, Height,
            X_coordinate, Y_coordinate, Z_coordinate
        };
        jTextFields = new JTextField[]{
            jTextField1, jTextField2, jTextField3, jTextField4,
            jTextField5, jTextField6, jTextField7

        };

        jPanelParameters.setVisible(false);
        Sidepanel.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jPanelGraphics = new javax.swing.JPanel();
        jPanelSide = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        Sidepanel = new javax.swing.JPanel();
        jPanelParameters = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        Width = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        Z_coordinate = new javax.swing.JLabel();
        Y_coordinate = new javax.swing.JLabel();
        Radius = new javax.swing.JLabel();
        Length = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        Height = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        X_coordinate = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        OKbutton = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        UpdateValues = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        FileOpen = new javax.swing.JMenuItem();
        Save = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        XY_View = new javax.swing.JMenuItem();
        YZ_View = new javax.swing.JMenuItem();
        XZ_View = new javax.swing.JMenuItem();
        jMenu2DObjects = new javax.swing.JMenu();
        Circle = new javax.swing.JMenuItem();
        Square = new javax.swing.JMenuItem();
        Rectangle = new javax.swing.JMenuItem();
        jMenu3DObjects = new javax.swing.JMenu();
        Cube = new javax.swing.JMenuItem();
        Cuboid = new javax.swing.JMenuItem();
        Cone = new javax.swing.JMenuItem();
        Sphere = new javax.swing.JMenuItem();
        Cylinder = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("File");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar3.add(jMenu6);

        jMenuItem5.setText("jMenuItem5");

        jMenu8.setText("jMenu8");

        jMenu9.setText("jMenu9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jList);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Select Shape");

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(Update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Update)
                    .addComponent(Delete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelGraphics.setPreferredSize(new java.awt.Dimension(550, 550));
        jPanelGraphics.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanelSideLayout = new javax.swing.GroupLayout(jPanelSide);
        jPanelSide.setLayout(jPanelSideLayout);
        jPanelSideLayout.setHorizontalGroup(
            jPanelSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelSideLayout.setVerticalGroup(
            jPanelSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane2.setViewportView(jTextArea);

        jTextField7.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextField7PropertyChange(evt);
            }
        });

        Width.setText("Width");

        jTextField6.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextField6PropertyChange(evt);
            }
        });

        Z_coordinate.setText("z-coordinate");

        Y_coordinate.setText("y-coordinate");

        Radius.setText("Radius");

        Length.setText("Length");

        jTextField4.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextField4PropertyChange(evt);
            }
        });

        Height.setText("Height");

        jTextField3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextField3PropertyChange(evt);
            }
        });

        X_coordinate.setText("x-coordinate");

        jTextField1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextField1PropertyChange(evt);
            }
        });

        jTextField2.setToolTipText("");
        jTextField2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextField2PropertyChange(evt);
            }
        });

        OKbutton.setText("OK");
        OKbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKbuttonActionPerformed(evt);
            }
        });

        jTextField5.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextField5PropertyChange(evt);
            }
        });

        UpdateValues.setText("Update values!");
        UpdateValues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateValuesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelParametersLayout = new javax.swing.GroupLayout(jPanelParameters);
        jPanelParameters.setLayout(jPanelParametersLayout);
        jPanelParametersLayout.setHorizontalGroup(
            jPanelParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParametersLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(UpdateValues)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanelParametersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Length)
                    .addComponent(Width)
                    .addComponent(Height)
                    .addComponent(X_coordinate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Y_coordinate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Z_coordinate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Radius, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelParametersLayout.createSequentialGroup()
                        .addComponent(OKbutton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextField3)
                    .addComponent(jTextField2)
                    .addComponent(jTextField4)
                    .addComponent(jTextField5)
                    .addComponent(jTextField6)
                    .addComponent(jTextField7)
                    .addComponent(jTextField1)))
        );
        jPanelParametersLayout.setVerticalGroup(
            jPanelParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParametersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelParametersLayout.createSequentialGroup()
                        .addGroup(jPanelParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Radius)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Length))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Width))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Height))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(X_coordinate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Y_coordinate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Z_coordinate))
                .addGap(33, 33, 33)
                .addComponent(OKbutton)
                .addGap(22, 22, 22)
                .addComponent(UpdateValues)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SidepanelLayout = new javax.swing.GroupLayout(Sidepanel);
        Sidepanel.setLayout(SidepanelLayout);
        SidepanelLayout.setHorizontalGroup(
            SidepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        SidepanelLayout.setVerticalGroup(
            SidepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelGraphics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Sidepanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelSide, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Sidepanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanelGraphics, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))))
        );

        File.setText("File");

        FileOpen.setText("Open");
        FileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileOpenActionPerformed(evt);
            }
        });
        File.add(FileOpen);

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        File.add(Save);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        File.add(Exit);

        jMenuBar1.add(File);

        Edit.setText("Edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        XY_View.setText("XY view");
        XY_View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XY_ViewActionPerformed(evt);
            }
        });
        Edit.add(XY_View);

        YZ_View.setText("YZ view");
        YZ_View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YZ_ViewActionPerformed(evt);
            }
        });
        Edit.add(YZ_View);

        XZ_View.setText("XZ view");
        XZ_View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XZ_ViewActionPerformed(evt);
            }
        });
        Edit.add(XZ_View);

        jMenuBar1.add(Edit);

        jMenu2DObjects.setText("2D Objects");

        Circle.setText("Circle");
        Circle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CircleActionPerformed(evt);
            }
        });
        jMenu2DObjects.add(Circle);

        Square.setText("Square");
        Square.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SquareActionPerformed(evt);
            }
        });
        jMenu2DObjects.add(Square);

        Rectangle.setText("Rectangle");
        Rectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RectangleActionPerformed(evt);
            }
        });
        jMenu2DObjects.add(Rectangle);

        jMenuBar1.add(jMenu2DObjects);

        jMenu3DObjects.setText("3D Objects");
        jMenu3DObjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3DObjectsActionPerformed(evt);
            }
        });

        Cube.setText("Cube");
        Cube.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CubeActionPerformed(evt);
            }
        });
        jMenu3DObjects.add(Cube);

        Cuboid.setText("Cuboid");
        Cuboid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CuboidActionPerformed(evt);
            }
        });
        jMenu3DObjects.add(Cuboid);

        Cone.setText("Cone");
        Cone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConeActionPerformed(evt);
            }
        });
        jMenu3DObjects.add(Cone);

        Sphere.setText("Sphere");
        Sphere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SphereActionPerformed(evt);
            }
        });
        jMenu3DObjects.add(Sphere);

        Cylinder.setText("Cylinder");
        Cylinder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CylinderActionPerformed(evt);
            }
        });
        jMenu3DObjects.add(Cylinder);

        jMenuBar1.add(jMenu3DObjects);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//==============================================================================
    //============================================
    //A method to open a file when open is clicked
    //============================================

    private void FileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileOpenActionPerformed

        if (!shapeList.isEmpty()) {
            int n = JOptionPane.showConfirmDialog(this, "Do you want to open a file? The existing shapes will be deleted", "Warning",
                    JOptionPane.YES_NO_OPTION);
            if (n == JOptionPane.YES_OPTION) {
                shapeList.clear();
                listModel.clear();
            }
        }
        openaction(); //Openaction method is called here
    }//GEN-LAST:event_FileOpenActionPerformed

//==============================================================================
    //========================================================
    //A method to save the shapes created when save is clicked
    //========================================================

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
        FileDialog fd = new FileDialog(this, "Save", FileDialog.SAVE);
        fd.setVisible(true);
        String filename = fd.getFile();
        if (filename == null) {
            return;
        }

        try {
            int index = filename.lastIndexOf(".");
            if (index != -1) {
                filename = filename.substring(0, index);
            } else {
                filename = filename;
            }
            File file = new File(filename + ".txt");
            PrintWriter wt = new PrintWriter(file);

            for (Shape shpe : shapeList) {
                String[] labels = shpe.getLabels();
                wt.print(shpe.getClass().getSimpleName());

                for (int i = 0; i < labels.length; i++) {
                    wt.append(' ' + String.valueOf(shpe.returnvalues()[i]));
                }
                wt.print('\n');
            }
            wt.flush();
        } catch (IOException ex) {
            Logger.getLogger(myJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SaveActionPerformed

//==============================================================================

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

//==============================================================================

    private void CubeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CubeActionPerformed
        // TODO add your handling code here:
        error_message();                      //calling the error_message method
        if (error == true) {
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(false);

        } else {
            shape = new Cube();
            setLabels();
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(true);
        }
        error = false;
    }//GEN-LAST:event_CubeActionPerformed

//==============================================================================

    private void CuboidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CuboidActionPerformed
        // TODO add your handling code here:
        error_message();                      //calling the error_message method
        if (error == true) {
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(false);

        } else {
            shape = new Cuboid();
            setLabels();
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(true);
        }
        error = false;
    }//GEN-LAST:event_CuboidActionPerformed

//==============================================================================

    private void ConeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConeActionPerformed
        // TODO add your handling code here:
        error_message();                      //calling the error_message method
        if (error == true) {
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(false);

        } else {
            shape = new Cone();
            setLabels();
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(true);
        }
        error = false;
    }//GEN-LAST:event_ConeActionPerformed

//==============================================================================

    private void SphereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SphereActionPerformed
        // TODO add your handling code here:
        error_message();                      //calling the error_message method
        if (error == true) {
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(false);

        } else {
            shape = new Sphere();
            setLabels();
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(true);
        }
        error = false;
    }//GEN-LAST:event_SphereActionPerformed

//==============================================================================
    //=============================
    //A method to delete the shape
    //=============================

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:  
        int index = jList.getSelectedIndex();
        if (index != -1) {
            ((DefaultListModel) jList.getModel()).remove(index);
            shapeList.remove(index);
        }
        graph.update = true;

    }//GEN-LAST:event_DeleteActionPerformed

//==============================================================================
    //=============================================================================
    //A method that displays the jparameters panel when the update button is clicked
    //=============================================================================

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:        
        int index = jList.getSelectedIndex();
        if (index != -1) {
            shape = shapeList.get(index);
            String[] labels = shape.getLabels();
            for (JLabel jLabel : jLabels) {
                jLabel.setVisible(false);
            }
            for (JTextField jTextField : jTextFields) {
                jTextField.setVisible(false);
            }
            for (int i = 0; i < labels.length; i++) {
                String label = labels[i];
                jLabels[i].setVisible(true);
                jLabels[i].setText(label);
                jTextFields[i].setVisible(true);
                jTextFields[i].setText(String.valueOf(shape.returnvalues()[i]));
            }
        }
        jPanelParameters.setVisible(true);
        UpdateValues.setVisible(true);
        OKbutton.setVisible(false);
    }//GEN-LAST:event_UpdateActionPerformed

    private void jMenu3DObjectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3DObjectsActionPerformed

        // TODO add your handling code here:

    }//GEN-LAST:event_jMenu3DObjectsActionPerformed

//==============================================================================

    private void RectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RectangleActionPerformed
        // TODO add your handling code here:
        error_message();                      //calling the error_message method
        if (error == true) {
            Sidepanel.setVisible(true);
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(false);

        } else {
            shape = new Rectangle();
            setLabels();
            Sidepanel.setVisible(true);
            jTextArea.setText(shape.Coordinates());
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(false);
        }
        error = false;
    }//GEN-LAST:event_RectangleActionPerformed

//==============================================================================

    private void SquareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SquareActionPerformed
        // TODO add your handling code here:
        error_message();                      //calling the error_message method
        if (error == true) {
            Sidepanel.setVisible(true);
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(false);

        } else {
            shape = new Square();
            setLabels();
            Sidepanel.setVisible(true);
            jPanelParameters.setVisible(true);
            UpdateValues.setVisible(false);
        }
        error = false;
    }//GEN-LAST:event_SquareActionPerformed

//==============================================================================

    private void CircleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CircleActionPerformed
        // TODO add your handling code here:
        error_message();                      //calling the error_message method
        if (error == true) {
            Sidepanel.setVisible(true);
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(false);

        } else {
            shape = new Circle();
            setLabels();
            Sidepanel.setVisible(true);
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(true);

        }
        error = false;

    }//GEN-LAST:event_CircleActionPerformed

//==============================================================================

    private void YZ_ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YZ_ViewActionPerformed
        // TODO add your handling code here:
        graph.setOrientation("YZ");//setting the orientation in the yz direction
        graph.update = true;
    }//GEN-LAST:event_YZ_ViewActionPerformed

//==============================================================================

    private void XZ_ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XZ_ViewActionPerformed
        graph.setOrientation("XZ");//setting the orientation in the xz direction
        graph.update = true;
    }//GEN-LAST:event_XZ_ViewActionPerformed

//==============================================================================

    private void XY_ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XY_ViewActionPerformed
        // TODO add your handling code here:
        graph.setOrientation("XY");//setting the orientation in the xy direction
        graph.update = true;
    }//GEN-LAST:event_XY_ViewActionPerformed

//==============================================================================

    private void CylinderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CylinderActionPerformed
        // TODO add your handling code here:
        error_message();                      //calling the error_message method
        if (error == true) {
            Sidepanel.setVisible(true);
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(false);

        } else {
            shape = new Cylinder();
            setLabels();
            Sidepanel.setVisible(true);
            UpdateValues.setVisible(false);
            jPanelParameters.setVisible(true);
        }
        error = false;
    }//GEN-LAST:event_CylinderActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed

    }//GEN-LAST:event_EditActionPerformed

//==============================================================================
    //=======================================================
    //A method to update the values initially set by the user
    //=======================================================

    private void UpdateValuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateValuesActionPerformed
        // TODO add your handling code here:
        double[] parameters = new double[shape.getLabels().length + 1];
        String[] labels = shape.getLabels();
        for (int i = 0; i < labels.length; i++) {
            parameters[i] = Double.parseDouble(jTextFields[i].getText());
        }
        shape.setParameters(parameters);
        jTextArea.setText(shape.toString());
        OKbutton.setVisible(true);

        for (int i = 0; i < labels.length; i++) {
            jTextFields[i].setText("");
        }
        graph.update = true;
        jPanelParameters.setVisible(true);

    }//GEN-LAST:event_UpdateValuesActionPerformed

    private void jTextField5PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextField5PropertyChange

    }//GEN-LAST:event_jTextField5PropertyChange

//==============================================================================
    //=================================================================
    //A method to take in the parameters when the OK Button is clicked
    //=================================================================

    private void OKbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKbuttonActionPerformed
        // TODO add your handling code here:
        double[] parameters = new double[shape.getLabels().length + 1];
        String[] labels = shape.getLabels();
        for (int i = 0; i < labels.length; i++) {
            parameters[i] = Double.parseDouble(jTextFields[i].getText());
        }
        shape.setParameters(parameters); //The parameters are passed to the appropriate shape class
        shapeList.add(shape);            //The shape is added to the shape list
        String m = shape.getClass().getSimpleName();
        listModel.addElement(m);         //The name of the shape is added to the JList
        jList.setModel(listModel);
        Sidepanel.setVisible(true);
        jPanelParameters.setVisible(false);
        jTextArea.setText(shape.toString());
        jPanelGraphics.setVisible(true);
        for (int i = 0; i < labels.length; i++) {
            jTextFields[i].setText("");
        }
        graph.update = true;
    }//GEN-LAST:event_OKbuttonActionPerformed

    private void jTextField2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextField2PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2PropertyChange

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextField1PropertyChange

        //}
    }//GEN-LAST:event_jTextField1PropertyChange

    private void jTextField3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextField3PropertyChange

    }//GEN-LAST:event_jTextField3PropertyChange

    private void jTextField4PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextField4PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4PropertyChange

    private void jTextField6PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextField6PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6PropertyChange

    private void jTextField7PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextField7PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7PropertyChange

//===============================================================================
    //===========================================================================
    //Creating a method to display an error message when the user tries to create 
    //a 2D shpe over a 3D shape or vice-versa
    //===========================================================================
    private void error_message() {
        for (Shape shape : shapeList) {
            if (shape instanceof geometry.Twodimensional_Shape) {
                JOptionPane.showMessageDialog(this,
                        "You are not allowed to create a 3D object over a 2D object."); //Displaying the pop menu 
                error = true;                                                           //with the error message
            }
            if (shape instanceof geometry.Threedimensional_Shape) {
                JOptionPane.showMessageDialog(this,
                        "You are not allowed to create a 2D object over a 3D object.");//Displaying the pop menu 
                error = true;                                                          //with the error message                                     
            }
        }

    }

//==============================================================================
    //=========================================================
    //Setting the labels in the text field for a selected shape
    //=========================================================
    private void setLabels() {
        String[] labels = shape.getLabels();
        for (JLabel jLabel : jLabels) {
            jLabel.setVisible(false);
        }
        for (JTextField jTextField : jTextFields) {
            jTextField.setVisible(false);
        }
        for (int i = 0; i < labels.length; i++) {
            String label = labels[i];
            jLabels[i].setVisible(true);
            jLabels[i].setText(label);
            jTextFields[i].setVisible(true);

        }
    }

//==============================================================================
    //======================================================
    //Creating a method that reads text files and STL files 
    //======================================================
    @SuppressWarnings("empty-statement")
    private void openaction() {
        FileDialog fd = new FileDialog(this);
        fd.setVisible(true);

        String filename = fd.getFile();
        String dir = fd.getDirectory();
        if (filename == null) {
            System.out.println("You cancelled the choice");
            return;
        }
        //====================================================
        //Reading STL Files
        //====================================================
        String ext = filename.substring(filename.lastIndexOf(".") + 1);
        if (ext.equalsIgnoreCase("STL")) {
            int n = JOptionPane.showConfirmDialog(this, "Do you want a wireframe model", "Question",
                    JOptionPane.YES_NO_OPTION);        //Letting the user choose between a wireframe model and a solid model 
            if (n == JOptionPane.YES_OPTION) {
                graph.wireframe = true;
            } else if (n == JOptionPane.NO_OPTION || n == JOptionPane.CANCEL_OPTION) {
                graph.wireframe = false;
            }
            ArrayList<float[]> NORMAL = new ArrayList<>();
            ArrayList<float[]> VERTEX = new ArrayList<>();

            File file = new File(dir + filename);
            try (BufferedReader br1 = new BufferedReader(new FileReader(file))) {
                String read_STL = null;

                while (!"endsolid".equals(read_STL = br1.readLine())) {
                    if (read_STL.length() == 0) {
                        continue;
                    }
                    read_STL = read_STL.trim();
                    String[] arr;
                    arr = read_STL.split("[\\s]+");
                    if (read_STL.contains("normal")) {
                        float values[] = {Float.valueOf(arr[2]), Float.valueOf(arr[3]), Float.valueOf(arr[4])};
                        NORMAL.add(values);

                    } else if (read_STL.contains("vertex")) {

                        float vertexvalues[] = {Float.valueOf(arr[1]), Float.valueOf(arr[2]), Float.valueOf(arr[3])};
                        VERTEX.add(vertexvalues);

                    }
                }
                graph.isSTLLoaded = true;
                graph.STLdata(NORMAL, VERTEX);
                graph.getMaxVertex(VERTEX);
                graph.getMinVertex(VERTEX);
            } catch (IOException e) {

                System.out.print(e);
            }
        } else {

            //====================
            //Reading Text files
            //====================
            System.out.println("You chose " + dir + filename);

            File file = new File(dir + filename);
            try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                String s = null;
                while ((s = br.readLine()) != null) {
                    if (s.length() == 0) {
                        continue;
                    }
                    String[] arr;
                    arr = s.split("[\\s]+");
                    int n = arr.length;

                    String type = arr[0];
                    try {
                        Class c3 = Class.forName("geometry." + type);
                        shape = (Shape) c3.newInstance();
                    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                    }

                    List<Double> dimenList = new ArrayList<>();
                    double[] num = new double[3];
                    if (shape instanceof Twodimensional_Shape) {
                        for (int i = 1; i < n - 2; i++) {
                            dimenList.add(Double.valueOf(arr[i]));
                        }
                        num[0] = Double.valueOf(arr[n - 2]);
                        num[1] = Double.valueOf(arr[n - 1]);
                    } else {
                        for (int i = 1; i < n - 3; i++) {
                            dimenList.add(Double.valueOf(arr[i]));
                        }
                        num[0] = Double.valueOf(arr[n - 3]);
                        num[1] = Double.valueOf(arr[n - 2]);
                        num[2] = Double.valueOf(arr[n - 1]);
                    }
                    shape.dimension(num);
                    shape.setDimensions(dimenList);
                    shapeList.add(shape);

                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(myJFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(myJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            for (Shape shpe : shapeList) {
                String m = shpe.getClass().getSimpleName();
                listModel.addElement(m);
                jList.setModel(listModel);
                jTextArea.append(shpe.toString() + "\n");
                graph.update = true;

            }
        }
    }

//==============================================================================
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new myJFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Circle;
    private javax.swing.JMenuItem Cone;
    private javax.swing.JMenuItem Cube;
    private javax.swing.JMenuItem Cuboid;
    private javax.swing.JMenuItem Cylinder;
    private javax.swing.JButton Delete;
    private javax.swing.JMenu Edit;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenu File;
    private javax.swing.JMenuItem FileOpen;
    private javax.swing.JLabel Height;
    private javax.swing.JLabel Length;
    private javax.swing.JButton OKbutton;
    private javax.swing.JLabel Radius;
    private javax.swing.JMenuItem Rectangle;
    private javax.swing.JMenuItem Save;
    private javax.swing.JPanel Sidepanel;
    private javax.swing.JMenuItem Sphere;
    private javax.swing.JMenuItem Square;
    private javax.swing.JButton Update;
    private javax.swing.JButton UpdateValues;
    private javax.swing.JLabel Width;
    private javax.swing.JMenuItem XY_View;
    private javax.swing.JMenuItem XZ_View;
    private javax.swing.JLabel X_coordinate;
    private javax.swing.JMenuItem YZ_View;
    private javax.swing.JLabel Y_coordinate;
    private javax.swing.JLabel Z_coordinate;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList jList;
    private javax.swing.JMenu jMenu2DObjects;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu3DObjects;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelGraphics;
    private javax.swing.JPanel jPanelParameters;
    private javax.swing.JPanel jPanelSide;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
